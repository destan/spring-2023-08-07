package com.example.demo;

import lombok.RequiredArgsConstructor;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController
@RequiredArgsConstructor
@RequestMapping("users")
public class UserController {

    private final UserService usersService;

    // Following will be generated by @RequiredArgsConstructor:
    // public UserController(UserService usersService) {
    //     this.usersService = usersService;
    // }

    @GetMapping
    List<User> list(@RequestParam("username") Optional<String> username) {

        if (username.isPresent()) {
            return usersService.findByUsername(username.get());
        }

        return usersService.listAll();
    }

    @GetMapping("{userId}")
    ResponseEntity<User> get(@PathVariable("userId") Long id) {
        Optional<User> user = usersService.findById(id);

        if (user.isEmpty()) {
            return ResponseEntity.notFound().build();
        }

        return ResponseEntity.ok(user.get());
    }

    @PostMapping
    ResponseEntity<User> create(@RequestBody User user) {
        return ResponseEntity.ok().body(usersService.register(user));
    }

    @PutMapping("{userId}/profile")
    ResponseEntity<Profile> updateProfile(@RequestBody Profile profile) {
        return ResponseEntity.ok().build();
    }

    @PatchMapping("{userId}/profile")
    ResponseEntity<Profile> patchProfile(@PathVariable Long userId, @RequestBody Profile profile) {
        return ResponseEntity.ok().body(usersService.updateProfile(userId, profile));
    }

}
